[{"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\template\\src\\index.js":"1","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\template\\src\\app.jsx":"2","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\app.jsx":"3","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\Habit.jsx":"4","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\AddForm.jsx":"5","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\HabitReset.jsx":"6","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\Habits.jsx":"7","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\index.js":"8","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\Navbar.jsx":"9"},{"size":220,"mtime":1606218675427,"results":"10","hashOfConfig":"11"},{"size":123,"mtime":1606218855498,"results":"12","hashOfConfig":"11"},{"size":2313,"mtime":1606642847661,"results":"13","hashOfConfig":"14"},{"size":1296,"mtime":1606641934133,"results":"15","hashOfConfig":"14"},{"size":653,"mtime":1606641919308,"results":"16","hashOfConfig":"14"},{"size":375,"mtime":1606642457217,"results":"17","hashOfConfig":"14"},{"size":729,"mtime":1606638511570,"results":"18","hashOfConfig":"14"},{"size":274,"mtime":1606315135952,"results":"19","hashOfConfig":"14"},{"size":408,"mtime":1606641923063,"results":"20","hashOfConfig":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xvaha6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"f06ijs",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\template\\src\\index.js",[],"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\template\\src\\app.jsx",[],"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\app.jsx",["40"],"import React, { Component } from 'react';\nimport Habits from './components/Habits';\nimport Navbar from './components/Navbar';\nimport AddForm from './components/AddForm';\nimport HabitReset from './components/HabitReset';\nimport './app.css';\n\nclass App extends Component {\n  state={\n    habits : [\n        {id: 0 ,name:\"아침에 스트레칭\", count:0},\n        {id: 1 ,name:\"지각하지 않기\", count:0},\n        {id: 2 ,name:\"1시간씩 독서하기\", count:0}\n    ],\n    nav_count : 0,\n  };\n\n  navCount = (habits) => {\n    const count = habits.filter(habit => habit.count >= 1);\n    this.setState({habits, nav_count : count.length});\n  }\n\n  habitAdd = (name) => {\n    if(!name){\n      alert('올바른 이름을 입력하세요!');\n      return;\n    }\n    const habits = [...this.state.habits];\n    habits.push({\n      id: 0,\n      name:name, \n      count:0\n    });\n    habits.map((habit) => {\n      habit.id = habits.indexOf(habit);\n    })\n    this.setState({habits});\n  }\n\n  handleIncrease = (habit) =>{\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id){\n        return {...habit, count:item.count+1};\n      }\n      return item;\n    })\n    this.navCount(habits);\n  };\n\n  handleDecrease = (habit) =>{\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id){\n        const count = item.count-1\n        return {...habit, count:count < 0 ? 0 : count};\n      }\n      return item;\n    })\n    this.navCount(habits);\n  };\n\n  handleDelete = (habit) =>{\n    const habits = [...this.state.habits];\n    const result = habits.filter(item => item.id !== habit.id)\n      \n    this.navCount(result);\n  }\n\n  handleReset = () =>{\n    const habits = this.state.habits.map(item => {\n      if(item.count > 0){\n        return {...item, count:0};\n      }\n      return item;\n    })\n\n    this.navCount(habits);\n  }\n\n  render() {\n    return (\n      <main className=\"app\">\n          <Navbar count={this.state.nav_count} />\n          <AddForm addForm={this.habitAdd} />\n          <Habits \n            habits={this.state.habits} \n            onIncrease={this.handleIncrease}\n            onDecrease={this.handleDecrease}\n            onDelete={this.handleDelete} \n          />\n          <HabitReset onReset={this.handleReset} />\n      </main>   \n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\Habit.jsx",[],"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\AddForm.jsx",[],"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\HabitReset.jsx",[],"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\Habits.jsx",[],"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\index.js",[],"C:\\Users\\Nacho\\Desktop\\DC-Academy\\React\\my-habit_tracker\\src\\components\\Navbar.jsx",[],{"ruleId":"41","severity":1,"message":"42","line":34,"column":24,"nodeType":"43","messageId":"44","endLine":34,"endColumn":26},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]